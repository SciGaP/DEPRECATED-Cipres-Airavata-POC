<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE pise SYSTEM "http://www.phylo.org/dev/rami/PARSER/pise.dtd">
	<!-- To be Validated-->


<pise>
	<!-- Created for Swami by Rami Rifaieh-->

<head>
<title>FingerPRINTScan</title>
<version>3.595</version>
<description>Search PRINTS DB for motifs similar to PS</description>
<authors>Phil Scordis</authors>
<category>Protein Sequence</category>
</head>

<command>fingerprintscan</command>

<!--
	"FingerPRINTScan Databasefile Sequencefile [-arglist] > outputfile"

The Database file format is the .profile format
The Sequence file format is fasta-format
      **Not included yet****	
        -a   Calculate consensus sequences for the Alignment view (Table 4)
        -c   Set database format to .profile format (Default)
        -C   Output the .profile format of the database
                The syntax of this command is different to all other commands.
                being:  FingerPRINTScan -C prints.dat > prints.pval
                or:     FingerPRINTScan -Cb blocks.dat > blocks.pval
		*****		
				
        -d # Percentage allowed distance deviation between motifs.
             (where # is a number in the range 0 .. 100)
             (0 is a special case which turns off distance checking)
        -e # E-value threshold.
             (where # is a floating point number)
	  
	   **Not included yet****	
        -E #1 #2  E-value calculation parameters.
             (where #1 is the number of sequences in the primary database (default 80000))
             (where #2 is the number of resides   in the primary database (default 2.96103e+07))
             ( the default values are based on SWISS-PROT 38)
        -f   Explicitly state the format of the provided sequence is in the fasta format
              (Currently default)
        -F   Explicitly state the format of the provided sequence is the PRINTS in house format
              (Now defunct)
		******
		
        -G   Set options to produce output compatable with the GRAPHScan program
		
		**Not included yet****	
        -m   Set the scoring matrix (62 (default), 45 or 80)
              (This only makes any difference when creating the .pval database)
        -n   Use the conventional database format (Slow when computing pvals)
		********
		
		
        -o # 
             (where # = a decimal number corresponding to the type of output
             required, this number corresponds to the number of bits turned on
             in the following matrix)
                TableNo  4 3 2 1
                BitValue 1 2 4 8
                Eg.      0 0 1 1 = 4+8 = 12, which will switch on 
                                        tables 1 and 2 in the output
                Table 1 = shortest description of the results, only the
                          top scoring hits
                Table 2 = medium description of the results, the ten
                          top scoring hits detailed by fingerprint
                Table 3 = most detailed description of the results,
                          the ten top scoring hits, detailed by
                          individual motif
                Table 4 = experimental alignment of the sequence and the 
                          consensus sequence of the motif.
                          (-a flag needs to be on too)
		
		**Not included yet****			  
        -R   Restrict all results in all tables to those which score below the Evalue
             threshold.
		********	 
			 
        -s   select the random shuffle option (which shuffles all sequences)
        -t # Specify the Profile score threshold (where # is a positive integer (default= 15))
        -w   Output the GNU licence
        -x # Specify the P-value score threshold 
             (where # is a positive integer representing the negative power to which 1 is raised)
	-->
<parameters>
    <parameter ismandatory="1" issimple="1" isinput="1" type="Sequence"> 
	<name>sequence</name>
	<attributes>
		<prompt>Entry sequence file:</prompt>
		<format>
			<language>perl</language>
			<code>"FingerPRINTScan /projects/ngbw_db1/data/PRINTS/fingerPrintScanDb/prints39_0.pval_blos62 sequence.fasta"</code>
		</format>
		<filenames>sequence.fasta</filenames>	
		<group>0</group>
		<comment>
			<value>The input sequence file is in fasta format</value>
		</comment>
		<seqfmt>
			<value>8</value>
		</seqfmt>
	</attributes>
	</parameter>
	
    <parameter type="Float">
      <name>motif</name>
      <attributes>
		<prompt>Percentage allowed distance deviation between motifs (-d)</prompt>
		<format>
		  <language>perl</language>
		  <code>" -d $value"</code>
		</format>
		<comment>
			<value> Percentage allowed distance deviation between motifs.
                   where the numerical value is a number between 0 - 100
                   (0 is a special case which turns off distance checking)</value>
		</comment>
	    <ctrls>
			<ctrl>
		     <message>percentage must be less than 100</message>
			 <language>perl</language>
			 <code>$value &gt; 100</code>
		   </ctrl>
		   <ctrl>
		     <message>percentage must be more than 0</message>
			 <language>perl</language>
			 <code>$value &lt; 0</code>
		   </ctrl>
	      </ctrls>
		<group>4</group>
      </attributes>
    </parameter>
	
    <parameter type="Float">
      <name>threshold</name>
      <attributes>
		<prompt>E-value threshold (-e)</prompt>
		<format>
		  <language>perl</language>
		  <code>" -e $value"</code>
		</format>
		<comment>
			<value>E-value threshold (-e) where value is a floating point number</value>
		</comment>
		<group>5</group>
      </attributes>
    </parameter>	


 <parameter type="Paragraph">
   <paragraph>
	<name>Output</name>
	<prompt>Output Options</prompt>
	<parameters>
		  
    <parameter type="Switch">
      <name>graph_scan</name>
      <attributes>
		<prompt>Set options to produce output compatable with the GRAPHScan program (-G)</prompt>
		<format>
		  <language>perl</language>
		  <code> ($value)?" -G":""</code>
		</format>
		<vdef><value>0</value></vdef>
		<group>6</group>
      </attributes>
    </parameter>	

	 <parameter type="Integer">
	    <name>number_bits</name>
	    <attributes>	      
	      <prompt>A decimal number corresponding to the type of output
             required (-o)
		  </prompt>
	      <format>
			<language>perl</language>
			<code>($value)? " -o $value" : ""</code>
	      </format>
	      <vdef><value></value></vdef>
	      <group>7</group>

		  <comment>
			<value>	        
			 The input is a decimal number corresponding to the type of output
             required. The number corresponds to the number of bits turned on
             in the following matrix:
                TableNo  4 3 2 1
                BitValue 1 2 4 8
                Eg.      0 0 1 1 = 4+8 = 12, which will switch on 
                                        tables 1 and 2 in the output
                Table 1 = shortest description of the results, only the
                          top scoring hits
                Table 2 = medium description of the results, the ten
                          top scoring hits detailed by fingerprint
                Table 3 = most detailed description of the results,
                          the ten top scoring hits, detailed by
                          individual motif
                Table 4 = experimental alignment of the sequence and the 
                          consensus sequence of the motif.
                          (-a flag needs to be on too)
			</value>
		  </comment>
	    </attributes>
	  </parameter>	
	 
	  	
	<parameter type="OutFile">
      <name>outputfile</name>
      <attributes>
		 <format>
			<language>perl</language>
			<code> " &gt; outfile" </code>
	      </format>
		<filenames>outfile</filenames>
		<group>99</group>
      </attributes>
	 </parameter>

   </parameters>
  </paragraph>
 </parameter>
         	  
    <parameter type="Switch">
      <name>random_shuffle</name>
      <attributes>
		<prompt>Select the random shuffle option (which shuffles all sequences) (-s)</prompt>
		<format>
		  <language>perl</language>
		  <code> ($value)?" -s":""</code>
		</format>
		<vdef><value>0</value></vdef>
		<group>15</group>
      </attributes> 
    </parameter>	
	
	<parameter type="Integer">
      <name>profile_score</name>
      <attributes>
		<prompt>Specify the Profile score threshold (-t)</prompt>
		<format>
		  <language>perl</language>
		  <code>" -t $value"</code>
		</format>
		<comment>
			<value>Specify the Profile score threshold. This is a positive integer (default= 15)</value>
		</comment>
		<group>16</group>
		<vdef><value>15</value></vdef>
		<ctrls>
			<ctrl>
		     <message>Positive Integer is required for Profile Score</message>
			 <language>perl</language>
			 <code>$value &lt; 0</code>
		   </ctrl>
		 </ctrls>
      </attributes>
    </parameter>	
 
 	<parameter type="Integer">
      <name>p_value</name>
      <attributes>
		<prompt>Specify the P-value score threshold (-x)</prompt>
		<format>
		  <language>perl</language>
		  <code>($value)?" -x $value":""</code>
		</format>
		<comment>
			<value>Specify the P-value score threshold 
             (where this value is a positive integer representing the negative power to which 1 is raised)</value>
		</comment>
		<group>17</group>
		<ctrls>
			<ctrl>
		     <message>Positive Integer is required for P-value score threshold</message>
			 <language>perl</language>
			 <code>$value &lt; 0</code>
		   </ctrl>
		 </ctrls>
      </attributes>
    </parameter>

</parameters>
	
</pise>

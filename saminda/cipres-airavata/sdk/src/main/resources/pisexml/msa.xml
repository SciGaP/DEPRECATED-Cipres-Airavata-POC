<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE pise SYSTEM "http://www.phylo.org/dev/rami/PARSER/pise.dtd">

<pise>

  <head>
    <title>MSA</title>
    <version>2.1</version>
    <description>Multiple Sequence Alignment of NS and PS</description>
    <authors>S. F. Altschul</authors>
	<category>Nucleic Acid Sequence, Protein Sequence</category>
  </head>
  
  <command>msa</command>

  <parameters>

    <parameter iscommand="1" ishidden="1" issimple="1" type="String">
      <name>msa</name>
      <attributes>
	<format>
	  <language>perl</language>
	  <code>"2upperCase &lt; sequences.Fasta &gt; sequences.FastaUpper ; (msa "</code>
	</format>
	<group>0</group>
      </attributes>
    </parameter>

	<!--     <parameter ismandatory="1" issimple="1"  type="Sequence"> -->
    <parameter ismandatory="1" issimple="1" isinput="1" type="Sequence"> 
      <name>seqs</name>
      <attributes>

	<prompt>Sequences File</prompt>
	
	<format>
	  <language>perl</language>
	    <!-- <code>" $value" </code>-->
			<code>" sequences.FastaUpper"</code>
	</format>
		<!-- Added for Swami -->
	<filenames>sequences.Fasta</filenames>
		<!-- -->
		
	<group>2</group>
	<seqfmt>
	  <value>8</value>
	</seqfmt>

      </attributes>
    </parameter>

    <parameter type="Paragraph">
      <paragraph>
	<name>control</name>
	<prompt>Control parameters</prompt>
	<parameters>

	  <parameter type="Switch">
	    <name>optimal</name>
	    <attributes>

	      <prompt>Turns off the optimal multiple alignment</prompt>
	      <format>
		<language>perl</language>
		<code>($value)? " -m":""</code>
	      </format>
	      <vdef><value>0</value></vdef>
	      <group>1</group>

	    </attributes>
	  </parameter>

	  <parameter type="InFile">
	    <name>forcedres</name>
	    <attributes>

	      <prompt>forced aligned residues file (see the documentation)</prompt>
		  
		<format>
		<language>perl</language>
		<!-- <code>($value)? " -f $value" : "" </code> -->
	      <code>" -f forcedres.residues" : "" </code>
		  </format>
		  <!-- Aded Swami -->
		 <filenames>forcedres.residues</filenames> 
		 <!-- -->  
		  
	      <group>1</group>
	    </attributes>
	  </parameter>

	</parameters>
      </paragraph>

    </parameter>

    <parameter type="Paragraph">
      <paragraph>
	<name>Cost</name>
	<prompt>Cost parameters</prompt>
	<parameters>

	  <parameter type="Switch">
	    <name>endgap</name>
	    <attributes>

	      <prompt>charges terminal gaps the same as internal gaps</prompt>
	      <format>
		<language>perl</language>
		<code> ($value)? " -g":""</code>
	      </format>
	      <vdef><value>0</value></vdef>
	      <group>1</group>

	    </attributes>
	  </parameter>

	  <parameter type="Switch">
	    <name>unweight</name>
	    <attributes>

	      <prompt>cost = unweighted sum</prompt>
	      <format>
		<language>perl</language>
		<code> ($value)? " -b":""</code>
	      </format>
	      <vdef><value>0</value></vdef>
	      <group>1</group>

	    </attributes>
	  </parameter>

	  <parameter type="Integer">
	    <name>maxscore</name>
	    <attributes>

	      <prompt>maximum score of an optimal multiple alignment</prompt>
	      <format>
		<language>perl</language>
		<code> (defined $value)? " -d$value" : ""</code>
	      </format>
	      <group>1</group>

	    </attributes>
	  </parameter>

	  <parameter type="InFile">
	    <name>epsilons</name>
	    <attributes>

	      <prompt>Epsilons file (see the documentation)</prompt>
	      <format>
		<language>perl</language>
		<code>($value)? " -e $value" : "" </code>
	      </format>
		  
		<format>
		<language>perl</language>
		<!-- <code>($value)? " -e $value" : ""</code> -->
	      <code>" -e epsilons.file" : "" </code>
		</format>
		  <!-- Aded Swami -->
		 <filenames>epsilons.file</filenames> 
		 <!-- -->  
	
	      <group>1</group>

	    </attributes>
	  </parameter>

	  <parameter type="InFile">
	    <name>costs</name>
	    <attributes>

	      <prompt>Costs file (see the documentation)</prompt>
	      <format>
		<language>perl</language>
		<code>($value)? " -c $value" : "" </code>
	      </format>
		  
		  		  
		<format>
		<language>perl</language>
		<!-- <code>($value)? " -c $value" : "" </code> -->
	      <code>" -c costs.file" : "" </code>
		</format>
		  <!-- Aded Swami -->
		 <filenames>costs.file</filenames> 
		 <!-- -->  
	
	      <group>1</group>

	    </attributes>
	  </parameter>

	</parameters>
      </paragraph>

    </parameter>

    <parameter type="Paragraph">
      <paragraph>
	<name>output</name>
	<prompt>Output parameters</prompt>
	<parameters>

	  <parameter type="Switch">
	    <name>quiet</name>
	    <attributes>

	      <prompt>suppress verbose output</prompt>
	      <format>
		<language>perl</language>
		<code>($value)? " -o":""</code>
	      </format>
	      <group>1</group>

	    </attributes>
	  </parameter>

	</parameters>
      </paragraph>

    </parameter>
	
	<!-- Added for Swami -->
	    <parameter type="OutFile">
      <name>outputfile</name>
      <attributes>
        <format>
			<language>perl</language>
            <code>" &gt; outputfile"</code>
        </format>
        <filenames>outputfile</filenames>
		<group>3</group>
      </attributes>
    </parameter>
		
<parameter  type="OutFile">
      <name>error_file</name>
      <attributes>
	<format>
	  <language>perl</language>
	  <code>") &gt;&amp; ERROR"</code>
	</format>
	<group>99</group>

	<filenames>ERROR</filenames>
	
      </attributes>
    </parameter>
	<!-- -->

  </parameters>
</pise>

<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE pise SYSTEM "http://www.phylo.org/dev/rami/PARSER/pise.dtd">
<!--
	This is a template that can be used to add a new tool to the workbench. 
-->
<!--
 	Typically we put a comment here that describes all the program's command line options, often
	we just paste in the result of running "man <command>" or "<command> -h" or whatever it takes
	to get the program to tell you it's command line options.
-->
<pise>	
	<head>
		<title>New Tool</title>
		<version>0.0</version>
		<description>Brief description of the New Tool goes here.</description>
		<authors>Name of authors of New Tool goes here.</authors>
		<reference>References for New Tool.</reference>
		<category>Tool Category goes here. Todo: list valid categories.</category>
		  <doclink>Url to documentation for the New Tool (an online manual perhaps) goes here.</doclink>
	</head>
	<command>new_tool</command>
	
	<parameters>

		<!-- Typically the first parameter in this file is used to output the 
		command name as the first part of the command line.

		In this example, we'll be creating a command line that begins with "new_tool."
		and will be followed by command line arguments that are specified in other parameters
		later in the file.  Any parameters that should appear after the command line must specify 
		a group > 0.  Anything that should appear before the command name, like input redirection, 
		should specify group < 0.
		-->
		<parameter ishidden="1" type="String">
			<name>command_name</name>
			<attributes>
				<format>
					<language>perl</language>
					<code>"new_tool"</code>
				</format>
				<group>0</group>
			</attributes>
		</parameter>

		<!-- Here we're declaring the "main input" to the tool, that is the data that the user
		selects outside of this gui.  The workbench will take the data the user chooses and
		put it in a file of the name you specify in the <filename> element below.  Chances
		are, you'll want to use the <format> element to output the text that will pass that
		file to the program.
		
		When using this template you must leave the <name> as "infile".
		-->
		<parameter ismandatory="1" issimple="1" isinput="1" type="InFile">
			<name>infile</name>
			<attributes>
				<format>
					<language>perl</language>
					<code>" -s infile.phylip"</code>
				</format>
				<group>1</group>
				<filenames>infile.phylip</filenames>
			</attributes>
		</parameter>


		<!-- We also need to specify the names of the output files that the tool creates, or
		at least those that we want returned to the user. --> 
		<parameter type="Results">
			<name>outputfile</name>
			<attributes>
				<filenames>*.result</filenames>
			</attributes>
		</parameter>


		<!-- Parameters with visible controls start here -->

		<!-- An example: is it protein or dna input ? -->
		<parameter type="Excl" issimple="1" ismandatory="1" >
			<name>datatype</name>
			<attributes>
				<prompt>Sequence Type</prompt>
				<vlist>
					<value>protein</value>
					<label>protein</label>
					<value>dna</value>
					<label>DNA</label>
				</vlist>
				<vdef>
					<value>dna</value>
				</vdef>
				<group>2</group>
			</attributes>
		</parameter>

	</parameters>
</pise>
